@model FYP.Models.Messenge


<style>
    .incoming_msg_img {
        display: inline-block;
        width: 6%;
        top: -100%;
    }

    .received_msg {
        display: inline-block;
        padding: 0 0 0 10px;
        vertical-align: top;
        width: 92%;
    }

    .type_msg {
        /*border-top: 1px solid #c4c4c4;*/
        position: relative;
        padding: 25px 5px 5px 10px;
    }

    .msg_send_btn {
        background: #05728f none repeat scroll 0 0;
        border: medium none;
        border-radius: 50%;
        color: #fff;
        cursor: pointer;
        font-size: 17px;
        height: 33px;
        position: absolute;
        right: 0;
        top: 11px;
        width: 33px;
    }

    .scrollbar {
        height: 180px;
        overflow-y: scroll;
    }

    .received_withd_msg p {
        background: #ebebeb none repeat scroll 0 0;
        border-radius: 3px;
        color: #646464;
        font-size: 14px;
        margin: 0;
        padding: 5px 10px 5px 12px;
        width: 100%;
    }

    .outgoing_msg {
        overflow: hidden;
        margin: 26px 0 26px;
        top: -100%;
    }

    .sent_msg p {
        background: #05728f none repeat scroll 0 0;
        border-radius: 3px;
        font-size: 14px;
        margin: 0;
        color: #fff;
        padding: 5px 10px 5px 12px;
        width: 100%;
    }

    .sent_msg {
        float: right;
        width: 46%;
    }

    .time_date {
        color: #747474;
        display: block;
        font-size: 12px;
        margin: 8px 0 0;
    }
</style> 

<div class="container page-header">
    <fieldset>
        <h1>Messenger</h1>
    </fieldset>
</div>
<div class="container scrollbar" id="chat-scroll" >

    @if (Model == null)
    {

    }
    else
    {
        foreach (var item in Model.messageData)
        {
            if (item.Sender.ToString() == Session["UserID"].ToString())
            {
                if (item.MessageID.ToString() == "0")
                {
                    <div class="outgoing_msg" >
                        <div class="sent_msg">
                            <p>
                                @item.MessageContent
                            </p>
                            <span class="time_date"> @item.MessageDateTime</span>
                        </div>
                    </div>
                }
                else if (item.MessageID.ToString() == "1")
                {
                    <div class="incoming_msg">
                        <div class="received_msg">
                            <div class="received_withd_msg">
                                <p>
                                    @item.MessageContent
                                </p>
                                <span class="time_date"> @item.MessageDateTime</span>
                            </div>
                        </div>
                    </div>
                }
            }
            else if (item.Receiver.ToString() == Session["UserID"].ToString())
            {
                if (item.MessageID.ToString() == "1")
                {
                    <div class="outgoing_msg">
                        <div class="sent_msg">
                            <p>
                                @item.MessageContent
                            </p>
                            <span class="time_date"> @item.MessageDateTime</span>
                        </div>
                    </div>
                }
                else if (item.MessageID.ToString() == "0")
                {
                    <div class="incoming_msg">
                        <div class="received_msg">
                            <div class="received_withd_msg">
                                <p>
                                    @item.MessageContent
                                </p>
                                <span class="time_date"> @item.MessageDateTime</span>
                            </div>
                        </div>
                    </div>
                }
            }
        }
    }


</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container">


        @Html.ValidationSummary(true)

        <div class="type_msg">
            @Html.TextAreaFor(model => model.MessageContent, new { @class = "form-control", placeholder = "Type a message", @Value = Model.MessageContent })
            <br />
            <div class="col-11 text-right">
                <input type="submit" value="Send" class="btn btn-success" Style="width: 120px" id="MessageContainButton" />
            </div>
        </div>
        <br />
    </div>


}
